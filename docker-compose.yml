services:
  backend:
    build: ./backend
    ports:
      - "127.0.0.1:3001:8000"
    restart: unless-stopped
    environment:
      DEBUG: False
      ENV: production
      ALLOWED_HOSTS: fleetms.kosssst.me
      DB_NAME: $POSTGRES_DB
      DB_USER: $POSTGRES_USER
      DB_PASS: $POSTGRES_PASSWORD
      DB_HOST: fleetms-postgres
      DB_PORT: 5432
      SECRET_KEY: $SECRET_KEY
      CORS_ALLOWED_ORIGINS: https://fleetms.kosssst.me
    depends_on:
      - db
    networks:
      - fleetms-network

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: https://fleetms.kosssst.me/api
    ports:
      - "127.0.0.1:3002:3000"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - fleetms-network

  db:
    image: postgres:latest
    container_name: fleetms-postgres
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - fleetms-network
      - db-network

  db_backup:
    image: tiredofit/db-backup:latest
    restart: unless-stopped
    volumes:
      - ./db_backups/:/backup
    environment:
      DEBUG_MODE: True
      DB_TYPE: postgres
      DB_HOST: fleetms-postgres
      DB_NAME: $POSTGRES_DB
      DB_USER: $POSTGRES_USER
      DB_PASS: $POSTGRES_PASSWORD
      DB_DUMP_FREQ: 60
      DB_CLEANUP_TIME: 300
      DEFAULT_CHECKSUM: SHA1
      DEFAULT_COMPRESSION: GZ
      SPLIT_DB: true
      CONTAINER_ENABLE_MONITORING: FALSE
    depends_on:
      - db
    networks:
      - db-network

volumes:
  db_data:

networks:
  fleetms-network:
  db-network: