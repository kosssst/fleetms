services:
  backend:
    build: ./backend
    ports:
      - "127.0.0.1:3001:8000"
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://mongo:27017/fleetms
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - NODE_ENV=production
      - RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - fleetms-network

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: ${API_URL}
    ports:
      - "127.0.0.1:3002:3000"
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=${API_URL}
    depends_on:
      - backend
    networks:
      - fleetms-network

  mongo:
    image: mongo:latest
    container_name: fleetms-mongo
    restart: unless-stopped
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - db_data:/data/db
    networks:
      - fleetms-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: fleetms-rabbitmq
    restart: unless-stopped
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      - fleetms-network

  analysis-service:
    build: ./analysis-service
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://mongo:27017/fleetms
      - RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - fleetms-network

volumes:
  db_data:

networks:
  fleetms-network: